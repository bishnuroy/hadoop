#### Reference urls:
https://groups.google.com/a/cloudera.org/forum/#!topic/hue-user/y6RAOEYCU3E

http://marianoguerra.org/es/posts/enabling-cors-in-solr-in-a-cloudera-environment.html

https://github.ibm.com/CIOCloud/bfringe_logging/tree/master/Enable_CORS-Solr

#### The following changes were made on all the Solr instances (iscdh101,iscdh102 & iscdh103).

* Download the jar files needed for this to work.

```
# cd /opt/cloudera/parcels/CDH/jars
# wget -c "https://repo1.maven.org/maven2/com/thetransactioncompany/cors-filter/2.1.2/cors-filter-2.1.2.jar"
# wget -c "https://repo1.maven.org/maven2/com/thetransactioncompany/java-property-utils/1.9.1/java-property-utils-1.9.1.jar"
# chmod 755 cors-filter-2.1.2.jar java-property-utils-1.9.1.jar jetty-util-8.1.14.v20131031.jar jetty-servlet-8.1.14.v20131031.jar

[root@iscdh101 jars]# ls -ltr cors-filter-2.1.2.jar java-property-utils-1.9.1.jar jetty-servlet-8.1.14.v20131031.jar jetty-util-8.1.14.v20131031.jar 
-rwxr-xr-x 1 root root   7847 Nov 26  2013 java-property-utils-1.9.1.jar
-rwxr-xr-x 1 root root  27519 Aug  8  2014 cors-filter-2.1.2.jar
-rwxr-xr-x 1 root root 287680 May  8  2015 jetty-util-8.1.14.v20131031.jar
-rwxr-xr-x 1 root root 101714 May  8  2015 jetty-servlet-8.1.14.v20131031.jar

```
* Create symbolic links to these jar files in tomcat library.

```
# cd /opt/cloudera/parcels/CDH/lib/bigtop-tomcat/lib
# ln -s ../../../jars/jetty-servlet-8.1.14.v20131031.jar
# ln -s ../../../jars/jetty-util-8.1.14.v20131031.jar
# ln -s ../../../jars/java-property-utils-1.9.1.jar
# ln -s ../../../jars/cors-filter-2.1.2.jar

[root@iscdh101 lib]# ls -ltr jetty-servlet-8.1.14.v20131031.jar jetty-util-8.1.14.v20131031.jar java-property-utils-1.9.1.jar cors-filter-2.1.2.jar 
lrwxrwxrwx 1 root root 65 Oct 19 06:13 jetty-servlet-8.1.14.v20131031.jar -> /opt/cloudera/parcels/CDH/jars/jetty-servlet-8.1.14.v20131031.jar
lrwxrwxrwx 1 root root 62 Oct 19 06:13 jetty-util-8.1.14.v20131031.jar -> /opt/cloudera/parcels/CDH/jars/jetty-util-8.1.14.v20131031.jar
lrwxrwxrwx 1 root root 43 Oct 19 07:56 java-property-utils-1.9.1.jar -> ../../../jars/java-property-utils-1.9.1.jar
lrwxrwxrwx 1 root root 35 Oct 19 07:57 cors-filter-2.1.2.jar -> ../../../jars/cors-filter-2.1.2.jar

```
* Load the above jars into CLASSPATH. Create setenv.sh, add CLASSPATH and give execute permission for the file.

```
# cd /opt/cloudera/parcels/CDH/lib/bigtop-tomcat/bin/
# vi setenv.sh
CLASSPATH="$CATALINA_HOME"/lib/cors-filter-2.1.2.jar:"$CATALINA_HOME"/lib/java-property-utils-1.9.1.jar:"$CATALINA_HOME"/lib/jetty-util-8.1.14.v20131031.jar:"$CATALINA_HOME"/lib/jetty-servlet-8.1.14.v20131031.jar:"$CATALINA_HOME"/lib/servlet-api.jar

[root@iscdh101 bin]# cat setenv.sh 
CLASSPATH="$CATALINA_HOME"/lib/cors-filter-2.1.2.jar:"$CATALINA_HOME"/lib/java-property-utils-1.9.1.jar:"$CATALINA_HOME"/lib/jetty-util-8.1.14.v20131031.jar:"$CATALINA_HOME"/lib/jetty-servlet-8.1.14.v20131031.jar:"$CATALINA_HOME"/lib/servlet-api.jar

[root@iscdh101 bin]# chmod 755 setenv.sh
```
* To support CORS, add this filter to /opt/cloudera/parcels/CDH/etc/solr/tomcat-conf.dist/WEB-INF/web.xml after ```<web-app>``` and before other ```<filter>```

```
# cd /opt/cloudera/parcels/CDH/etc/solr/tomcat-conf.dist/WEB-INF/
# vi web.xml

<!-- =================================== -->
  <!--      Enable CORS for Banana         -->
  <!-- =================================== -->
<filter>
    <filter-name>CORS</filter-name>
    <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CORS</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  ```
  ```
  # cat web.xml
  ...
  ...
  ...
  
  <!-- People who want to hardcode their "Solr Home" directly into the
       WAR File can set the JNDI property here...
   -->
  <!--
    <env-entry>
       <env-entry-name>solr/home</env-entry-name>
       <env-entry-value>/put/your/solr/home/here</env-entry-value>
       <env-entry-type>java.lang.String</env-entry-type>
    </env-entry>
   -->

<!-- =================================== -->
  <!--      Enable CORS for Banana         -->
  <!-- =================================== -->
<filter>
    <filter-name>CORS</filter-name>
    <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CORS</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Resolves the requester's hostname, necessary for ProxyUserFilter -->
  <filter>
    <filter-name>HostnameFilter</filter-name>
    <filter-class>org.apache.solr.servlet.HostnameFilter</filter-class>
  </filter>

  <!-- Requires Authentication for any path, based on Hadoop's AuthenticationFilter -->
...
...
...
```
* Now restart SOLR cluster to permit all hosts to satisfy CORS requirements.

#### Note, once Cloudera Search supports Tomcat 7.0.41 (or above), the JAR files are no longer needed and use this filter:

```
<filter>
  <filter-name>CorsFilter</filter-name>
  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
</filter>
<filter-mapping>
  <filter-name>CorsFilter</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>
```
##### The way to know if it worked is to open the Solr admin panel, if it loads it works, if it doesn't look at the logs, mine are at /var/log/solr/. To be sure that the classpath was set correctly from setenv.sh look in the solr admin page in the "Java Properties" section for the java.class.path variable, it should have the class path you set in setenv.hs plus some extra stuff (mainly bootstrap.jar).

If the admin page doesn't load (tomcat 404) look at the logs, some class loading error may be happening, comment the config you added in web.xml and restart.

* Now you should be able to connect to solr using a remote banana instance.


  

